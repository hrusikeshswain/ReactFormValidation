{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HrusikeshSwain\\\\OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC\\\\Desktop\\\\React\\\\FormValidation\\\\01-starting-project\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const inputRef = useRef(); // const [nameIsValid, setEnteredNameIsValid] = useState(false);\n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (nameIsValid) {//call api\n    }\n  }, [nameIsValid]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // console.log(event.target.value);\n\n    setEnteredNameTouched(true);\n\n    if (inputValue.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(inputValue);\n    const enteredValue = inputRef.current.value;\n    console.log(enteredValue);\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n\n    if (inputValue.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const inputChangeHandler = event => {\n    console.log(event.target.value);\n    setInputValue(event.target.value);\n\n    if (event.target.value.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const nameInputIsValid = nameIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputIsValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameInputBlurHandler,\n        value: inputValue,\n        onChange: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), !nameIsValid && enteredNameTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"pEoSpRax+PW2Hl9J2wMwlnsj0uU=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","SimpleInput","props","inputValue","setInputValue","inputRef","enteredNameTouched","setEnteredNameTouched","nameIsValid","formSubmitHandler","event","preventDefault","trim","setEnteredNameIsValid","console","log","enteredValue","current","value","nameInputBlurHandler","inputChangeHandler","target","nameInputIsValid"],"sources":["C:/Users/HrusikeshSwain/OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC/Desktop/React/FormValidation/01-starting-project/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const inputRef = useRef();\n  // const [nameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n\n  \n  useEffect(() => {\n    if (nameIsValid) {\n      //call api\n    }\n  }, [nameIsValid]);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // console.log(event.target.value);\n    setEnteredNameTouched(true);\n    if (inputValue.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(inputValue);\n\n    const enteredValue = inputRef.current.value;\n\n    console.log(enteredValue);\n  };\n\n  const nameInputBlurHandler = () =>{\n     setEnteredNameTouched(true);\n     if (inputValue.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  }\n\n  const inputChangeHandler = (event) => {\n    console.log(event.target.value);\n    setInputValue(event.target.value);\n    if (event.target.value.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const nameInputIsValid = nameIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputIsValid}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={inputRef}\n          type=\"text\"\n          id=\"name\"\n          onBlur={nameInputBlurHandler}\n          value={inputValue}\n          onChange={inputChangeHandler}\n        />\n        {!nameIsValid && enteredNameTouched && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAMO,QAAQ,GAAGN,MAAM,EAAvB,CAF6B,CAG7B;;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;EAIAE,SAAS,CAAC,MAAM;IACd,IAAIQ,WAAJ,EAAiB,CACf;IACD;EACF,CAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;;EAMA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;IACnCA,KAAK,CAACC,cAAN,GADmC,CAEnC;;IACAJ,qBAAqB,CAAC,IAAD,CAArB;;IACA,IAAIJ,UAAU,CAACS,IAAX,OAAsB,EAA1B,EAA8B;MAC5BC,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IAEDA,qBAAqB,CAAC,IAAD,CAArB;IACAC,OAAO,CAACC,GAAR,CAAYZ,UAAZ;IAEA,MAAMa,YAAY,GAAGX,QAAQ,CAACY,OAAT,CAAiBC,KAAtC;IAEAJ,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACD,CAfD;;EAiBA,MAAMG,oBAAoB,GAAG,MAAK;IAC/BZ,qBAAqB,CAAC,IAAD,CAArB;;IACA,IAAIJ,UAAU,CAACS,IAAX,OAAsB,EAA1B,EAA8B;MAC7BC,qBAAqB,CAAC,KAAD,CAArB;IACD;EACF,CALD;;EAOA,MAAMO,kBAAkB,GAAIV,KAAD,IAAW;IACpCI,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACW,MAAN,CAAaH,KAAzB;IACAd,aAAa,CAACM,KAAK,CAACW,MAAN,CAAaH,KAAd,CAAb;;IACA,IAAIR,KAAK,CAACW,MAAN,CAAaH,KAAb,CAAmBN,IAAnB,OAA8B,EAAlC,EAAsC;MACpCC,qBAAqB,CAAC,IAAD,CAArB;IACD;EACF,CAND;;EAQA,MAAMS,gBAAgB,GAAGd,WAAW,GAChC,sBADgC,GAEhC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEC,iBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEa,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAEjB,QADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,MAAM,EAAEc,oBAJV;QAKE,KAAK,EAAEhB,UALT;QAME,QAAQ,EAAEiB;MANZ;QAAA;QAAA;QAAA;MAAA,QAFF,EAUG,CAACZ,WAAD,IAAgBF,kBAAhB,iBACC;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAvED;;GAAML,W;;KAAAA,W;AAyEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}