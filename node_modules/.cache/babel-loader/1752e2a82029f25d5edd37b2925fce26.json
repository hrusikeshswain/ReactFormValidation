{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HrusikeshSwain\\\\OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC\\\\Desktop\\\\React\\\\FormValidation\\\\01-starting-project\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useInput from \"../hooks/user-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: nameValue,\n    isTouched: isNameTouched,\n    enteredValueIsValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: resetName\n  } = useInput(value => value.trim() !== '');\n\n  const emailValidator = emailValue => {\n    const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n    return emailValue.trim() !== '' && pattern.test(emailValue.trim());\n  };\n\n  const {\n    value: emailValue,\n    isTouched: isEmailTouched,\n    enteredValueIsValid: enteredEmailValueIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(emailValidator);\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailValueIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailValueIsValid) {\n      return;\n    }\n\n    reset();\n    resetEmail();\n  };\n\n  const nameInputIsValid = !enteredNameIsValid && isNameTouched ? \"form-control invalid\" : \"form-control\";\n  const emailInputIsValid = !enteredEmailValueIsValid && isEmailTouched ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputIsValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Name\",\n        onBlur: nameBlurHandler,\n        value: nameValue,\n        onChange: nameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !enteredValueIsValid && isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputIsValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        size: \"30\",\n        placeholder: \"Email\",\n        onBlur: emailBlurHandler,\n        value: emailValue,\n        onChange: emailChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !enteredEmailValueIsValid && isEmailTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"t5ATLHgOqR9iRi1BXH8831tB3NA=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useInput","SimpleInput","props","value","nameValue","isTouched","isNameTouched","enteredValueIsValid","enteredNameIsValid","valueChangeHandler","nameChangeHandler","valueBlurHandler","nameBlurHandler","reset","resetName","trim","emailValidator","emailValue","pattern","test","isEmailTouched","enteredEmailValueIsValid","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","formSubmitHandler","event","preventDefault","nameInputIsValid","emailInputIsValid"],"sources":["C:/Users/HrusikeshSwain/OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC/Desktop/React/FormValidation/01-starting-project/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport useInput from \"../hooks/user-input\";\n\n\nconst SimpleInput = (props) => {\n\n  const { value:nameValue,\n    isTouched:isNameTouched,\n    enteredValueIsValid:enteredNameIsValid,\n    valueChangeHandler:nameChangeHandler,\n    valueBlurHandler:nameBlurHandler,\n    reset:resetName} = useInput(value => value.trim() !== '');\n\n  \n    const emailValidator = (emailValue) =>{\n      const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n    \n      return emailValue.trim() !== '' && pattern.test(emailValue.trim());\n    }\n\n    const { value:emailValue,\n      isTouched:isEmailTouched,\n      enteredValueIsValid:enteredEmailValueIsValid,\n      valueChangeHandler:emailChangeHandler,\n      valueBlurHandler:emailBlurHandler,\n      reset:resetEmail} = useInput(emailValidator);\n\n  \n\n  let formIsValid = false;\n  if(enteredNameIsValid && enteredEmailValueIsValid){\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n  \n    if(!enteredNameIsValid || !enteredEmailValueIsValid){\n      return;\n    }\n   \n    reset();\n    resetEmail();\n  };\n\n\n\n  const nameInputIsValid = (!enteredNameIsValid && isNameTouched)\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n    const emailInputIsValid = (!enteredEmailValueIsValid && isEmailTouched)\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputIsValid}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          placeholder=\"Name\"\n          onBlur={nameBlurHandler}\n          value={nameValue}\n          onChange={nameChangeHandler}\n        />\n        {!enteredValueIsValid && isTouched && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputIsValid}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          size=\"30\"\n          placeholder=\"Email\"\n          onBlur={emailBlurHandler}\n          value={emailValue}\n          onChange={emailChangeHandler}\n        />\n        {!enteredEmailValueIsValid && isEmailTouched && (\n          <p className=\"error-text\">Email must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled ={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}