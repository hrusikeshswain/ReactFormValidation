{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HrusikeshSwain\\\\OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC\\\\Desktop\\\\React\\\\FormValidation\\\\01-starting-project\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useInput from \"../hooks/user-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value,\n    isTouched,\n    enteredValueIsValid,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  } = useInput(value => value.trim() !== ''); // const result = pattern.test(emailInputValue.trim());\n  // const enteredEmailIsValid = emailInputValue.trim()!=='' && result;\n\n  const emailValidator = emailValue => {\n    const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n    return emailValue.trim() !== '' && pattern.test(emailInputValue.trim());\n  };\n\n  const {\n    emailValue,\n    isEmailTouched,\n    enteredEmailValueIsValid,\n    emailChangeHandler,\n    emailBlurHandler,\n    emailReset\n  } = useInput(); // const [emailInputValue, setEmailInputValue] = useState(\"\");\n  // const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  // const enteredNameIsValid = inputValue.trim()!== '';\n\n  let formIsValid = false;\n\n  if (enteredValueIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredEmailTouched(true);\n\n    if (!enteredValueIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    reset();\n    setEmailInputValue('');\n    setEnteredEmailTouched(false);\n  };\n\n  const emailInputBlurHandler = () => {\n    setEnteredEmailTouched(true);\n  };\n\n  const emaiInputChangeHandler = event => {\n    console.log(event.target.value);\n    setEmailInputValue(event.target.value);\n  };\n\n  const nameInputIsValid = !enteredValueIsValid && isTouched ? \"form-control invalid\" : \"form-control\";\n  const emailInputIsValid = !enteredEmailIsValid && enteredEmailTouched ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputIsValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Name\",\n        onBlur: valueBlurHandler,\n        value: value,\n        onChange: valueChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !enteredValueIsValid && isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputIsValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        size: \"30\",\n        placeholder: \"Email\",\n        onBlur: emailInputBlurHandler,\n        value: emailInputValue,\n        onChange: emaiInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), !enteredEmailIsValid && enteredEmailTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"je2qKbRdaQO0EfyMZ/W8di9scuE=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useInput","SimpleInput","props","value","isTouched","enteredValueIsValid","valueChangeHandler","valueBlurHandler","reset","trim","emailValidator","emailValue","pattern","test","emailInputValue","isEmailTouched","enteredEmailValueIsValid","emailChangeHandler","emailBlurHandler","emailReset","formIsValid","enteredEmailIsValid","formSubmitHandler","event","preventDefault","setEnteredEmailTouched","setEmailInputValue","emailInputBlurHandler","emaiInputChangeHandler","console","log","target","nameInputIsValid","emailInputIsValid","enteredEmailTouched"],"sources":["C:/Users/HrusikeshSwain/OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC/Desktop/React/FormValidation/01-starting-project/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport useInput from \"../hooks/user-input\";\n\n\nconst SimpleInput = (props) => {\n\n  const { value,\n    isTouched,\n    enteredValueIsValid,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset} = useInput(value => value.trim() !== '');\n\n   // const result = pattern.test(emailInputValue.trim());\n    // const enteredEmailIsValid = emailInputValue.trim()!=='' && result;\n  \n    const emailValidator = (emailValue) =>{\n      const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n    \n      return emailValue.trim() !== '' && pattern.test(emailInputValue.trim());\n    }\n\n    const { emailValue,\n      isEmailTouched,\n      enteredEmailValueIsValid,\n      emailChangeHandler,\n      emailBlurHandler,\n      emailReset} = useInput();\n\n  // const [emailInputValue, setEmailInputValue] = useState(\"\");\n  // const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  // const enteredNameIsValid = inputValue.trim()!== '';\n \n  let formIsValid = false;\n\n  if(enteredValueIsValid && enteredEmailIsValid){\n    formIsValid = true;\n  }\n\n\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n   \n    setEnteredEmailTouched(true);\n\n    if(!enteredValueIsValid || !enteredEmailIsValid){\n      return;\n    }\n   \n    reset();\n    setEmailInputValue('');\n    setEnteredEmailTouched(false);\n  };\n\n \n\n  const emailInputBlurHandler = () =>{\n    setEnteredEmailTouched(true);\n }\n\n  \n\n  const emaiInputChangeHandler = (event) => {\n    console.log(event.target.value);\n    setEmailInputValue(event.target.value);\n  };\n\n  \n  const nameInputIsValid = (!enteredValueIsValid && isTouched)\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n    const emailInputIsValid = (!enteredEmailIsValid && enteredEmailTouched)\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputIsValid}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          placeholder=\"Name\"\n          onBlur={valueBlurHandler}\n          value={value}\n          onChange={valueChangeHandler}\n        />\n        {!enteredValueIsValid && isTouched && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputIsValid}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          size=\"30\"\n          placeholder=\"Email\"\n          onBlur={emailInputBlurHandler}\n          value={emailInputValue}\n          onChange={emaiInputChangeHandler}\n        />\n        {!enteredEmailIsValid && enteredEmailTouched && (\n          <p className=\"error-text\">Email must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled ={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}