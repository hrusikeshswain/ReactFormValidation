{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HrusikeshSwain\\\\OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC\\\\Desktop\\\\React\\\\FormValidation\\\\01-starting-project\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const inputRef = useRef(); // const [nameIsValid, setEnteredNameIsValid] = useState(false);\n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = inputValue.trim() !== '';\n  useEffect(() => {}); // useEffect(() => {\n  //   if (nameIsValid) {\n  //     //call api\n  //   }\n  // }, [nameIsValid]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // console.log(event.target.value);\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    } // setEnteredNameIsValid(true);\n\n\n    console.log(inputValue);\n    const enteredValue = inputRef.current.value;\n    console.log(enteredValue);\n    setInputValue('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const inputChangeHandler = event => {\n    console.log(event.target.value);\n    setInputValue(event.target.value);\n  };\n\n  console.log(enteredNameTouched);\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputIsValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameInputBlurHandler,\n        value: inputValue,\n        onChange: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && enteredNameTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"rlMV40WpeCsyA+vQapxHC9ZHxPM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","SimpleInput","props","inputValue","setInputValue","inputRef","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","formSubmitHandler","event","preventDefault","console","log","enteredValue","current","value","nameInputBlurHandler","inputChangeHandler","target","nameInputIsValid"],"sources":["C:/Users/HrusikeshSwain/OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC/Desktop/React/FormValidation/01-starting-project/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const inputRef = useRef();\n  // const [nameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid,setFormIsValid]  = useState(false);\n\n\n  const enteredNameIsValid = inputValue.trim()!== '';\n\n  useEffect(()=>{},)\n\n  // useEffect(() => {\n  //   if (nameIsValid) {\n  //     //call api\n  //   }\n  // }, [nameIsValid]);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // console.log(event.target.value);\n    setEnteredNameTouched(true);\n    \n\n    if(!enteredNameIsValid){\n      return;\n    }\n    // setEnteredNameIsValid(true);\n    console.log(inputValue);\n\n    const enteredValue = inputRef.current.value;\n    console.log(enteredValue);\n    setInputValue('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputBlurHandler = () =>{\n     setEnteredNameTouched(true);\n     \n  }\n\n  const inputChangeHandler = (event) => {\n    console.log(event.target.value);\n    setInputValue(event.target.value);\n    \n  };\n\n  console.log(enteredNameTouched);\n\n  const nameInputIsValid = (!enteredNameIsValid && enteredNameTouched)\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputIsValid}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={inputRef}\n          type=\"text\"\n          id=\"name\"\n          onBlur={nameInputBlurHandler}\n          value={inputValue}\n          onChange={inputChangeHandler}\n        />\n        {!enteredNameIsValid && enteredNameTouched && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAMO,QAAQ,GAAGN,MAAM,EAAvB,CAF6B,CAG7B;;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACU,WAAD,EAAaC,cAAb,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;EAGA,MAAMY,kBAAkB,GAAGP,UAAU,CAACQ,IAAX,OAAqB,EAAhD;EAEAX,SAAS,CAAC,MAAI,CAAE,CAAP,CAAT,CAV6B,CAY7B;EACA;EACA;EACA;EACA;;EAEA,MAAMY,iBAAiB,GAAIC,KAAD,IAAW;IACnCA,KAAK,CAACC,cAAN,GADmC,CAEnC;;IACAP,qBAAqB,CAAC,IAAD,CAArB;;IAGA,IAAG,CAACG,kBAAJ,EAAuB;MACrB;IACD,CARkC,CASnC;;;IACAK,OAAO,CAACC,GAAR,CAAYb,UAAZ;IAEA,MAAMc,YAAY,GAAGZ,QAAQ,CAACa,OAAT,CAAiBC,KAAtC;IACAJ,OAAO,CAACC,GAAR,CAAYC,YAAZ;IACAb,aAAa,CAAC,EAAD,CAAb;IACAG,qBAAqB,CAAC,KAAD,CAArB;EACD,CAhBD;;EAkBA,MAAMa,oBAAoB,GAAG,MAAK;IAC/Bb,qBAAqB,CAAC,IAAD,CAArB;EAEF,CAHD;;EAKA,MAAMc,kBAAkB,GAAIR,KAAD,IAAW;IACpCE,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACS,MAAN,CAAaH,KAAzB;IACAf,aAAa,CAACS,KAAK,CAACS,MAAN,CAAaH,KAAd,CAAb;EAED,CAJD;;EAMAJ,OAAO,CAACC,GAAR,CAAYV,kBAAZ;EAEA,MAAMiB,gBAAgB,GAAI,CAACb,kBAAD,IAAuBJ,kBAAxB,GACrB,sBADqB,GAErB,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEM,iBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEW,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAElB,QADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,MAAM,EAAEe,oBAJV;QAKE,KAAK,EAAEjB,UALT;QAME,QAAQ,EAAEkB;MANZ;QAAA;QAAA;QAAA;MAAA,QAFF,EAUG,CAACX,kBAAD,IAAuBJ,kBAAvB,iBACC;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA1ED;;GAAML,W;;KAAAA,W;AA4EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}